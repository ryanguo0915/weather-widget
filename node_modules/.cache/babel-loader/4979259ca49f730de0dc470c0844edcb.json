{"ast":null,"code":"var _jsxFileName = \"/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherChart/WeatherChart.jsx\";\nimport { XAxis, YAxis, CartesianGrid, Tooltip, AreaChart, Area, ResponsiveContainer } from 'recharts';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherChart = ({\n  forecastOfDay\n}) => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n  width: \"100%\",\n  height: 200,\n  children: /*#__PURE__*/_jsxDEV(AreaChart, {\n    width: 1000,\n    height: 200,\n    data: forecastOfDay,\n    syncId: \"anyId\",\n    margin: {\n      top: 10,\n      right: 30,\n      left: 0,\n      bottom: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      dataKey: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Area, {\n      type: \"monotone\",\n      dataKey: \"temp\",\n      stroke: \"#82ca9d\",\n      fill: \"#82ca9d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n_c = WeatherChart;\nWeatherChart.defaultProps = {\n  forecastOfDay: []\n};\nWeatherChart.propTypes = {\n  forecastOfDay: PropTypes.arrayOf(PropTypes.shape({\n    dt: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    temp_min: PropTypes.number.isRequired,\n    temp_max: PropTypes.number.isRequired,\n    humidity: PropTypes.number.isRequired,\n    icon: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    clouds: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired,\n    time: PropTypes.string.isRequired\n  }))\n};\nexport default WeatherChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherChart/WeatherChart.jsx"],"names":["XAxis","YAxis","CartesianGrid","Tooltip","AreaChart","Area","ResponsiveContainer","PropTypes","WeatherChart","forecastOfDay","top","right","left","bottom","defaultProps","propTypes","arrayOf","shape","dt","number","isRequired","temp","temp_min","temp_max","humidity","icon","string","desc","clouds","wind","time"],"mappings":";AAAA,SACEA,KADF,EAEEC,KAFF,EAGEC,aAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,mBAPF,QAQO,UARP;AASA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACnB,QAAC,mBAAD;AAAqB,EAAA,KAAK,EAAC,MAA3B;AAAkC,EAAA,MAAM,EAAE,GAA1C;AAAA,yBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAE,IADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEA,aAHR;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KALV;AAAA,4BAYA,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAZA,eAaA,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAbA,eAcA,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAdA,eAeA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAfA,eAgBA,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,MAA9B;AAAqC,MAAA,MAAM,EAAC,SAA5C;AAAsD,MAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAML,Y;AAwBNA,YAAY,CAACM,YAAb,GAA4B;AAC1BL,EAAAA,aAAa,EAAE;AADW,CAA5B;AAIAD,YAAY,CAACO,SAAb,GAAyB;AACvBN,EAAAA,aAAa,EAAEF,SAAS,CAACS,OAAV,CACbT,SAAS,CAACU,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEX,SAAS,CAACY,MAAV,CAAiBC,UADP;AAEdC,IAAAA,IAAI,EAAEd,SAAS,CAACY,MAAV,CAAiBC,UAFT;AAGdE,IAAAA,QAAQ,EAAEf,SAAS,CAACY,MAAV,CAAiBC,UAHb;AAIdG,IAAAA,QAAQ,EAAEhB,SAAS,CAACY,MAAV,CAAiBC,UAJb;AAKdI,IAAAA,QAAQ,EAAEjB,SAAS,CAACY,MAAV,CAAiBC,UALb;AAMdK,IAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBN,UANT;AAOdO,IAAAA,IAAI,EAAEpB,SAAS,CAACmB,MAAV,CAAiBN,UAPT;AAQdQ,IAAAA,MAAM,EAAErB,SAAS,CAACY,MAAV,CAAiBC,UARX;AASdS,IAAAA,IAAI,EAAEtB,SAAS,CAACY,MAAV,CAAiBC,UATT;AAUdU,IAAAA,IAAI,EAAEvB,SAAS,CAACmB,MAAV,CAAiBN;AAVT,GAAhB,CADa;AADQ,CAAzB;AAiBA,eAAeZ,YAAf","sourcesContent":["import {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  AreaChart,\n  Area,\n  ResponsiveContainer,\n} from 'recharts';\nimport PropTypes from 'prop-types';\n\nconst WeatherChart = ({ forecastOfDay }) => (\n  <ResponsiveContainer width=\"100%\" height={200}>\n    <AreaChart\n      width={1000}\n      height={200}\n      data={forecastOfDay}\n      syncId=\"anyId\"\n      margin={{\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0,\n      }}\n    >\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"time\" />\n    <YAxis dataKey='' />\n    <Tooltip />\n    <Area type=\"monotone\" dataKey=\"temp\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n    </AreaChart>\n  </ResponsiveContainer>\n);\n\n\nWeatherChart.defaultProps = {\n  forecastOfDay: [],\n};\n\nWeatherChart.propTypes = {\n  forecastOfDay: PropTypes.arrayOf(\n    PropTypes.shape({\n      dt: PropTypes.number.isRequired,\n      temp: PropTypes.number.isRequired,\n      temp_min: PropTypes.number.isRequired,\n      temp_max: PropTypes.number.isRequired,\n      humidity: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      clouds: PropTypes.number.isRequired,\n      wind: PropTypes.number.isRequired,\n      time: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default WeatherChart;\n"]},"metadata":{},"sourceType":"module"}