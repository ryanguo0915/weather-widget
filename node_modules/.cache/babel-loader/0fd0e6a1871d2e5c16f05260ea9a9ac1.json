{"ast":null,"code":"var _jsxFileName = \"/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherWidget/WeatherWidget.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBannerTab from '../WeatherBannerTab/WeatherBannerTab';\nimport MiniWeatherCard from '../MiniWeatherCard/MiniWeatherCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherWidget = ({\n  config,\n  forecast\n}) => {\n  _s();\n\n  const [forecastIdx, setForecastIdx] = useState(0);\n\n  if (forecast !== undefined && forecast.length > 0) {\n    let firstMomentOfDay;\n    let forecastOfDay = [];\n    const forecastOfDayList = [];\n    /* eslint-disable no-param-reassign */\n\n    forecast.forEach((item, index) => {\n      if (firstMomentOfDay === undefined) {\n        firstMomentOfDay = moment.unix(item.dt);\n        forecast[index].moment = firstMomentOfDay;\n        forecastOfDay.push(item);\n      } else {\n        const currentMoment = moment.unix(item.dt);\n        forecast[index].moment = currentMoment;\n        console.log(currentMoment);\n\n        if (firstMomentOfDay.isSame(currentMoment, 'day')) {\n          forecastOfDay.push(item);\n        } else {\n          if (forecastOfDay.length <= 8) {\n            const nextDay = forecast.slice(index, index + 8 - forecastOfDay.length);\n            forecastOfDay = [...forecastOfDay, ...nextDay];\n          }\n\n          forecastOfDayList.push(forecastOfDay);\n          forecastOfDay = [];\n          forecastOfDay.push(item);\n          firstMomentOfDay = currentMoment;\n        }\n      }\n    });\n    /* eslint-enable no-param-reassign */\n\n    const forecastList = forecastOfDayList;\n    return /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WeatherBannerTab, {\n        className: \"\",\n        location: config.location,\n        forecastOfDay: forecastList[forecastIdx],\n        unit: config.unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Next5Container, {\n        children: [/*#__PURE__*/_jsxDEV(MiniWeatherCard, {\n          onClick: () => setForecastIdx(0),\n          forecastList: forecastList[0],\n          isSelected: forecastIdx === 0,\n          unit: config.unit,\n          locale: config.locale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniWeatherCard, {\n          onClick: () => setForecastIdx(1),\n          forecastList: forecastList[1],\n          isSelected: forecastIdx === 1,\n          unit: config.unit,\n          locale: config.locale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniWeatherCard, {\n          onClick: () => setForecastIdx(2),\n          forecastList: forecastList[2],\n          isSelected: forecastIdx === 2,\n          unit: config.unit,\n          locale: config.locale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniWeatherCard, {\n          onClick: () => setForecastIdx(3),\n          forecastList: forecastList[3],\n          isSelected: forecastIdx === 3,\n          unit: config.unit,\n          locale: config.locale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniWeatherCard, {\n          onClick: () => setForecastIdx(4),\n          forecastList: forecastList[4],\n          isSelected: forecastIdx === 4,\n          unit: config.unit,\n          locale: config.locale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No forecast data available!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherWidget, \"C3F7oZlNMEHMD22a8ojKfyBYilA=\");\n\n_c = WeatherWidget;\nWeatherWidget.defaultProps = {\n  config: PropTypes.arrayOf({\n    unit: 'metric'\n  }),\n  forecast: []\n};\nWeatherWidget.propTypes = {\n  forecast: PropTypes.arrayOf(PropTypes.shape({\n    dt: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    temp_min: PropTypes.number.isRequired,\n    temp_max: PropTypes.number.isRequired,\n    humidity: PropTypes.number.isRequired,\n    icon: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    clouds: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired\n  })),\n  config: PropTypes.shape({\n    location: PropTypes.string.isRequired,\n    unit: PropTypes.string,\n    locale: PropTypes.string\n  })\n};\nconst ContentContainer = styled.div`\n  display: block;\n  margin: 10px 5px;\n  text-align: left;\n  border: 1px solid #dddddd;\n  box-shadow: 3px 3px 3px #aaaaaa;\n  padding: 1rem 1rem;\n`;\n_c2 = ContentContainer;\nconst Next5Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\n_c3 = Next5Container;\nexport default WeatherWidget;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WeatherWidget\");\n$RefreshReg$(_c2, \"ContentContainer\");\n$RefreshReg$(_c3, \"Next5Container\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherWidget/WeatherWidget.jsx"],"names":["React","useState","PropTypes","moment","styled","WeatherBannerTab","MiniWeatherCard","WeatherWidget","config","forecast","forecastIdx","setForecastIdx","undefined","length","firstMomentOfDay","forecastOfDay","forecastOfDayList","forEach","item","index","unix","dt","push","currentMoment","console","log","isSame","nextDay","slice","forecastList","location","unit","locale","defaultProps","arrayOf","propTypes","shape","number","isRequired","temp","temp_min","temp_max","humidity","icon","string","desc","clouds","wind","ContentContainer","div","Next5Container"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBannerTab from '../WeatherBannerTab/WeatherBannerTab';\nimport MiniWeatherCard from '../MiniWeatherCard/MiniWeatherCard';\n\nconst WeatherWidget = ({ config, forecast }) => {\n  const [forecastIdx, setForecastIdx] = useState(0);\n\n  if (forecast !== undefined && forecast.length > 0) {\n    let firstMomentOfDay;\n    let forecastOfDay = [];\n    const forecastOfDayList = [];\n    /* eslint-disable no-param-reassign */\n    forecast.forEach((item, index) => {\n      if (firstMomentOfDay === undefined) {\n        firstMomentOfDay = moment.unix(item.dt);\n        forecast[index].moment = firstMomentOfDay;\n        forecastOfDay.push(item);\n      } else {\n        const currentMoment = moment.unix(item.dt);\n        forecast[index].moment = currentMoment;\n        console.log(currentMoment);\n        if (firstMomentOfDay.isSame(currentMoment, 'day')) {\n          forecastOfDay.push(item);\n        } else {\n          if(forecastOfDay.length <= 8) {\n            const nextDay = forecast.slice(index, index+8-forecastOfDay.length);\n            forecastOfDay = [...forecastOfDay, ...nextDay];\n          }\n          forecastOfDayList.push(forecastOfDay);\n          forecastOfDay = [];\n          forecastOfDay.push(item);\n          firstMomentOfDay = currentMoment;\n        }\n      }\n    });\n    /* eslint-enable no-param-reassign */\n    const forecastList = forecastOfDayList;\n    return (\n      <ContentContainer>\n        <WeatherBannerTab\n          className=\"\"\n          location={config.location}\n          forecastOfDay={forecastList[forecastIdx]}\n          unit={config.unit}\n        />\n        <Next5Container>\n          <MiniWeatherCard\n            onClick={() => setForecastIdx(0)}\n            forecastList={forecastList[0]}\n            isSelected={forecastIdx === 0}\n            unit={config.unit}\n            locale={config.locale}\n          />\n          <MiniWeatherCard\n            onClick={() => setForecastIdx(1)}\n            forecastList={forecastList[1]}\n            isSelected={forecastIdx === 1}\n            unit={config.unit}\n            locale={config.locale}\n          />\n          <MiniWeatherCard\n            onClick={() => setForecastIdx(2)}\n            forecastList={forecastList[2]}\n            isSelected={forecastIdx === 2}\n            unit={config.unit}\n            locale={config.locale}\n          />\n          <MiniWeatherCard\n            onClick={() => setForecastIdx(3)}\n            forecastList={forecastList[3]}\n            isSelected={forecastIdx === 3}\n            unit={config.unit}\n            locale={config.locale}\n          />\n          <MiniWeatherCard\n            onClick={() => setForecastIdx(4)}\n            forecastList={forecastList[4]}\n            isSelected={forecastIdx === 4}\n            unit={config.unit}\n            locale={config.locale}\n          />\n        </Next5Container>\n      </ContentContainer>\n    );\n  }\n  return (\n    <div>\n      <h3>No forecast data available!</h3>\n    </div>\n  );\n};\n\nWeatherWidget.defaultProps = {\n  config: PropTypes.arrayOf({\n    unit: 'metric',\n  }),\n  forecast: [],\n};\n\nWeatherWidget.propTypes = {\n  forecast: PropTypes.arrayOf(\n    PropTypes.shape({\n      dt: PropTypes.number.isRequired,\n      temp: PropTypes.number.isRequired,\n      temp_min: PropTypes.number.isRequired,\n      temp_max: PropTypes.number.isRequired,\n      humidity: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      clouds: PropTypes.number.isRequired,\n      wind: PropTypes.number.isRequired,\n    }),\n  ),\n  config: PropTypes.shape({\n    location: PropTypes.string.isRequired,\n    unit: PropTypes.string,\n    locale: PropTypes.string,\n  }),\n};\n\nconst ContentContainer = styled.div`\n  display: block;\n  margin: 10px 5px;\n  text-align: left;\n  border: 1px solid #dddddd;\n  box-shadow: 3px 3px 3px #aaaaaa;\n  padding: 1rem 1rem;\n`;\n\nconst Next5Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\n\nexport default WeatherWidget;\n"]},"metadata":{},"sourceType":"module"}