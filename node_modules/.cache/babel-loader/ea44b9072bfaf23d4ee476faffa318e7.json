{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport const useCurrentLocation = options => {\n  _s();\n\n  // store location in state\n  const [location, setLocation] = useState(); // store error message in state\n\n  const [error, setError] = useState(); // Success handler for geolocation's `getCurrentPosition` method\n\n  const handleSuccess = position => {\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    setLocation({\n      latitude,\n      longitude\n    });\n  }; // Error handler for geolocation's `getCurrentPosition` method\n\n\n  const handleError = error => {\n    setError(error.message);\n  }; // ...\n  // ...\n\n\n  if (!navigator.geolocation) {\n    console.log('Geolocation is not supported by your browser');\n  } else {\n    console.log('Locating…');\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, options);\n  } // Expose location result and the possible error message\n\n\n  return {\n    location,\n    error\n  };\n};\n\n_s(useCurrentLocation, \"NorpvDz801LSZRXzr5k8X/J2jVg=\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/hooks/useCurrentLocation.js"],"names":["useState","useCurrentLocation","options","location","setLocation","error","setError","handleSuccess","position","latitude","longitude","coords","handleError","message","navigator","geolocation","console","log","getCurrentPosition"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,OAAD,IAAa;AAAA;;AAC/C;AACE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC,CAF6C,CAG3C;;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC,CAJ2C,CAK7C;;AACA,QAAMO,aAAa,GAAGC,QAAQ,IAAI;AAChC,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BF,QAAQ,CAACG,MAAzC;AAEAP,IAAAA,WAAW,CAAC;AACVK,MAAAA,QADU;AAEVC,MAAAA;AAFU,KAAD,CAAX;AAID,GAPD,CAN6C,CAe7C;;;AACA,QAAME,WAAW,GAAGP,KAAK,IAAI;AAC3BC,IAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACD,GAFD,CAhB6C,CAoBzC;AAIJ;;;AAEA,MAAG,CAACC,SAAS,CAACC,WAAd,EAA2B;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH,GAFH,MAES;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAH,IAAAA,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAAyCX,aAAzC,EAAwDK,WAAxD,EAAqEV,OAArE;AACH,GA/B0C,CAgC7C;;;AACA,SAAO;AAAEC,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAP;AACD,CAlCM;;GAAMJ,kB","sourcesContent":["import { useState } from 'react';\n\nexport const useCurrentLocation = (options) => {\n// store location in state\n  const [location, setLocation] = useState();\n    // store error message in state\n    const [error, setError] = useState();\n  // Success handler for geolocation's `getCurrentPosition` method\n  const handleSuccess = position => {\n    const { latitude, longitude } = position.coords;\n\n    setLocation({\n      latitude,\n      longitude\n    });\n  };\n\n  // Error handler for geolocation's `getCurrentPosition` method\n  const handleError = error => {\n    setError(error.message);\n  };\n\n      // ...\n\n\n\n  // ...\n\n  if(!navigator.geolocation) {\n        console.log('Geolocation is not supported by your browser');\n    } else {\n        console.log('Locating…');\n        navigator.geolocation.getCurrentPosition(handleSuccess, handleError, options);\n    }    \n  // Expose location result and the possible error message\n  return { location, error };\n}"]},"metadata":{},"sourceType":"module"}