{"ast":null,"code":"var _jsxFileName = \"/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Brush, AreaChart, Area, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  locale,\n  unit\n}) => {\n  const marks = {}; //   forecastOfDay.forEach((item, index) => {\n  //     marks[index] = item.moment.locale(locale).format('a h:mm');\n  //   });\n\n  console.log(forecastOfDay);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LocationText, {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherBanner, {\n      forecastNow: forecastOfDay[0],\n      unit: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          width: 1000,\n          height: 200,\n          data: forecastOfDay,\n          syncId: \"anyId\",\n          margin: {\n            top: 10,\n            right: 30,\n            left: 0,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"temp\",\n            stroke: \"#82ca9d\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WeatherBannerTab;\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  forecastOfDay: []\n};\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(PropTypes.shape({\n    dt: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    temp_min: PropTypes.number.isRequired,\n    temp_max: PropTypes.number.isRequired,\n    humidity: PropTypes.number.isRequired,\n    icon: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    clouds: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired\n  })),\n  unit: PropTypes.string\n};\nexport default WeatherBannerTab;\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n_c2 = LocationText;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n_c3 = Container;\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n_c4 = TabContainer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"WeatherBannerTab\");\n$RefreshReg$(_c2, \"LocationText\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"TabContainer\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx"],"names":["React","useState","PropTypes","moment","styled","WeatherBanner","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Brush","AreaChart","Area","ResponsiveContainer","WeatherBannerTab","location","forecastOfDay","locale","unit","marks","console","log","top","right","left","bottom","defaultProps","propTypes","string","isRequired","arrayOf","shape","dt","number","temp","temp_min","temp_max","humidity","icon","desc","clouds","wind","LocationText","div","Container","TabContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Brush,\n    AreaChart,\n    Area,\n    ResponsiveContainer,\n  } from 'recharts';\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  locale,\n  unit,\n}) => {\n  const marks = {};\n//   forecastOfDay.forEach((item, index) => {\n//     marks[index] = item.moment.locale(locale).format('a h:mm');\n//   });\n  console.log(forecastOfDay);\n  return (\n    <Container>\n      <LocationText>{location}</LocationText>\n      <WeatherBanner forecastNow={forecastOfDay[0]} unit={unit} />\n      <TabContainer>\n        <ResponsiveContainer width=\"100%\" height={200}>\n            <AreaChart\n            width={1000}\n            height={200}\n            data={forecastOfDay}\n            syncId=\"anyId\"\n            margin={{\n                top: 10,\n                right: 30,\n                left: 0,\n                bottom: 0,\n            }}\n            >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"temp\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            </AreaChart>\n        </ResponsiveContainer>\n      </TabContainer>\n    </Container>\n  );\n};\n\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  forecastOfDay: [],\n};\n\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(\n    PropTypes.shape({\n      dt: PropTypes.number.isRequired,\n      temp: PropTypes.number.isRequired,\n      temp_min: PropTypes.number.isRequired,\n      temp_max: PropTypes.number.isRequired,\n      humidity: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      clouds: PropTypes.number.isRequired,\n      wind: PropTypes.number.isRequired,\n    }),\n  ),\n  unit: PropTypes.string,\n};\n\nexport default WeatherBannerTab;\n\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n"]},"metadata":{},"sourceType":"module"}