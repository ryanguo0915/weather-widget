{"ast":null,"code":"var _jsxFileName = \"/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  locale,\n  unit\n}) => {\n  const marks = {};\n  forecastOfDay.forEach((item, index) => {\n    marks[index] = item.moment.locale(locale).format('a h:mm');\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LocationText, {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WeatherBannerTab;\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  forecastOfDay: []\n};\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(PropTypes.shape({\n    dt: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    temp_min: PropTypes.number.isRequired,\n    temp_max: PropTypes.number.isRequired,\n    humidity: PropTypes.number.isRequired,\n    icon: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    clouds: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired\n  })),\n  unit: PropTypes.string\n};\nexport default WeatherBannerTab;\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n_c2 = LocationText;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n_c3 = Container;\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n_c4 = TabContainer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"WeatherBannerTab\");\n$RefreshReg$(_c2, \"LocationText\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"TabContainer\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx"],"names":["React","useState","PropTypes","moment","styled","WeatherBanner","WeatherBannerTab","location","forecastOfDay","locale","unit","marks","forEach","item","index","format","defaultProps","propTypes","string","isRequired","arrayOf","shape","dt","number","temp","temp_min","temp_max","humidity","icon","desc","clouds","wind","LocationText","div","Container","TabContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,QADwB;AAExBC,EAAAA,aAFwB;AAGxBC,EAAAA,MAHwB;AAIxBC,EAAAA;AAJwB,CAAD,KAKnB;AACJ,QAAMC,KAAK,GAAG,EAAd;AACAH,EAAAA,aAAa,CAACI,OAAd,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrCH,IAAAA,KAAK,CAACG,KAAD,CAAL,GAAeD,IAAI,CAACV,MAAL,CAAYM,MAAZ,CAAmBA,MAAnB,EAA2BM,MAA3B,CAAkC,QAAlC,CAAf;AACD,GAFD;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,YAAD;AAAA,gBAAeR;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;KAAMD,gB;AAoBNA,gBAAgB,CAACU,YAAjB,GAAgC;AAC9BN,EAAAA,IAAI,EAAE,QADwB;AAE9BF,EAAAA,aAAa,EAAE;AAFe,CAAhC;AAKAF,gBAAgB,CAACW,SAAjB,GAA6B;AAC3BV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UADA;AAE3BX,EAAAA,aAAa,EAAEN,SAAS,CAACkB,OAAV,CACblB,SAAS,CAACmB,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEpB,SAAS,CAACqB,MAAV,CAAiBJ,UADP;AAEdK,IAAAA,IAAI,EAAEtB,SAAS,CAACqB,MAAV,CAAiBJ,UAFT;AAGdM,IAAAA,QAAQ,EAAEvB,SAAS,CAACqB,MAAV,CAAiBJ,UAHb;AAIdO,IAAAA,QAAQ,EAAExB,SAAS,CAACqB,MAAV,CAAiBJ,UAJb;AAKdQ,IAAAA,QAAQ,EAAEzB,SAAS,CAACqB,MAAV,CAAiBJ,UALb;AAMdS,IAAAA,IAAI,EAAE1B,SAAS,CAACgB,MAAV,CAAiBC,UANT;AAOdU,IAAAA,IAAI,EAAE3B,SAAS,CAACgB,MAAV,CAAiBC,UAPT;AAQdW,IAAAA,MAAM,EAAE5B,SAAS,CAACqB,MAAV,CAAiBJ,UARX;AASdY,IAAAA,IAAI,EAAE7B,SAAS,CAACqB,MAAV,CAAiBJ;AATT,GAAhB,CADa,CAFY;AAe3BT,EAAAA,IAAI,EAAER,SAAS,CAACgB;AAfW,CAA7B;AAkBA,eAAeZ,gBAAf;AAEA,MAAM0B,YAAY,GAAG5B,MAAM,CAAC6B,GAAI;AAChC;AACA,CAFA;MAAMD,Y;AAIN,MAAME,SAAS,GAAG9B,MAAM,CAAC6B,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMC,S;AAMN,MAAMC,YAAY,GAAG/B,MAAM,CAAC6B,GAAI;AAChC;AACA;AACA,CAHA;MAAME,Y","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  locale,\n  unit,\n}) => {\n  const marks = {};\n  forecastOfDay.forEach((item, index) => {\n    marks[index] = item.moment.locale(locale).format('a h:mm');\n  });\n\n  return (\n    <Container>\n      <LocationText>{location}</LocationText>\n      <TabContainer>\n      </TabContainer>\n    </Container>\n  );\n};\n\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  forecastOfDay: [],\n};\n\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(\n    PropTypes.shape({\n      dt: PropTypes.number.isRequired,\n      temp: PropTypes.number.isRequired,\n      temp_min: PropTypes.number.isRequired,\n      temp_max: PropTypes.number.isRequired,\n      humidity: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      clouds: PropTypes.number.isRequired,\n      wind: PropTypes.number.isRequired,\n    }),\n  ),\n  unit: PropTypes.string,\n};\n\nexport default WeatherBannerTab;\n\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n"]},"metadata":{},"sourceType":"module"}