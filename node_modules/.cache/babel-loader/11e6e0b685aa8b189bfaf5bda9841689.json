{"ast":null,"code":"var _jsxFileName = \"/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  unit\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LocationText, {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherBanner, {\n      forecastNow: forecastOfDay[0],\n      unit: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WeatherBannerTab;\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  locale: '',\n  forecastOfDay: []\n};\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(PropTypes.shape({\n    dt: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    temp_min: PropTypes.number.isRequired,\n    temp_max: PropTypes.number.isRequired,\n    humidity: PropTypes.number.isRequired,\n    icon: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    clouds: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired\n  })),\n  locale: PropTypes.string,\n  unit: PropTypes.string\n};\nexport default WeatherBannerTab;\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n_c2 = LocationText;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n_c3 = Container;\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WeatherBannerTab\");\n$RefreshReg$(_c2, \"LocationText\");\n$RefreshReg$(_c3, \"Container\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx"],"names":["React","useState","PropTypes","moment","styled","WeatherBanner","WeatherBannerTab","location","forecastOfDay","unit","defaultProps","locale","propTypes","string","isRequired","arrayOf","shape","dt","number","temp","temp_min","temp_max","humidity","icon","desc","clouds","wind","LocationText","div","Container","TabContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,QADwB;AAExBC,EAAAA,aAFwB;AAGxBC,EAAAA;AAHwB,CAAD,KAInB;AACJ,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,YAAD;AAAA,gBAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEC,aAAa,CAAC,CAAD,CAAzC;AAA8C,MAAA,IAAI,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAXD;;KAAMH,gB;AAaNA,gBAAgB,CAACI,YAAjB,GAAgC;AAC9BD,EAAAA,IAAI,EAAE,QADwB;AAE9BE,EAAAA,MAAM,EAAE,EAFsB;AAG9BH,EAAAA,aAAa,EAAE;AAHe,CAAhC;AAMAF,gBAAgB,CAACM,SAAjB,GAA6B;AAC3BL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADA;AAE3BN,EAAAA,aAAa,EAAEN,SAAS,CAACa,OAAV,CACbb,SAAS,CAACc,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEf,SAAS,CAACgB,MAAV,CAAiBJ,UADP;AAEdK,IAAAA,IAAI,EAAEjB,SAAS,CAACgB,MAAV,CAAiBJ,UAFT;AAGdM,IAAAA,QAAQ,EAAElB,SAAS,CAACgB,MAAV,CAAiBJ,UAHb;AAIdO,IAAAA,QAAQ,EAAEnB,SAAS,CAACgB,MAAV,CAAiBJ,UAJb;AAKdQ,IAAAA,QAAQ,EAAEpB,SAAS,CAACgB,MAAV,CAAiBJ,UALb;AAMdS,IAAAA,IAAI,EAAErB,SAAS,CAACW,MAAV,CAAiBC,UANT;AAOdU,IAAAA,IAAI,EAAEtB,SAAS,CAACW,MAAV,CAAiBC,UAPT;AAQdW,IAAAA,MAAM,EAAEvB,SAAS,CAACgB,MAAV,CAAiBJ,UARX;AASdY,IAAAA,IAAI,EAAExB,SAAS,CAACgB,MAAV,CAAiBJ;AATT,GAAhB,CADa,CAFY;AAe3BH,EAAAA,MAAM,EAAET,SAAS,CAACW,MAfS;AAgB3BJ,EAAAA,IAAI,EAAEP,SAAS,CAACW;AAhBW,CAA7B;AAmBA,eAAeP,gBAAf;AAEA,MAAMqB,YAAY,GAAGvB,MAAM,CAACwB,GAAI;AAChC;AACA,CAFA;MAAMD,Y;AAIN,MAAME,SAAS,GAAGzB,MAAM,CAACwB,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMC,S;AAMN,MAAMC,YAAY,GAAG1B,MAAM,CAACwB,GAAI;AAChC;AACA;AACA,CAHA","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  unit,\n}) => {\n  return (\n    <Container>\n      <LocationText>{location}</LocationText>\n      <WeatherBanner forecastNow={forecastOfDay[0]} unit={unit} />\n    </Container>\n  );\n};\n\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  locale: '',\n  forecastOfDay: [],\n};\n\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(\n    PropTypes.shape({\n      dt: PropTypes.number.isRequired,\n      temp: PropTypes.number.isRequired,\n      temp_min: PropTypes.number.isRequired,\n      temp_max: PropTypes.number.isRequired,\n      humidity: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      clouds: PropTypes.number.isRequired,\n      wind: PropTypes.number.isRequired,\n    }),\n  ),\n  locale: PropTypes.string,\n  unit: PropTypes.string,\n};\n\nexport default WeatherBannerTab;\n\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n"]},"metadata":{},"sourceType":"module"}