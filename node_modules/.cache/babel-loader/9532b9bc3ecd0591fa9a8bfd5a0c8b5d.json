{"ast":null,"code":"var _jsxFileName = \"/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Handle\n} = Slider;\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  locale,\n  unit,\n  onLocationClick\n}) => {\n  _s();\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const renderTabPanel = (item, displayUnit) => {\n    return /*#__PURE__*/_jsxDEV(TabPanel, {\n      children: /*#__PURE__*/_jsxDEV(WeatherBanner, {\n        forecastNow: item,\n        unit: displayUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, `tp${item.dt}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderTab = (item, displayLocale) => {\n    const localeRegion = displayLocale || 'zh-tw';\n\n    if (item) {\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        children: moment.unix(item.dt).locale(localeRegion).format('a h:mm')\n      }, `t${item.dt}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  };\n\n  const handle = params => {\n    const {\n      value,\n      dragging,\n      index,\n      ...restProps\n    } = params;\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      prefixCls: \"rc-slider-tooltip\",\n      overlay: value,\n      visible: dragging,\n      placement: \"top\",\n      children: /*#__PURE__*/_jsxDEV(Handle, {\n        value: value,\n        ...restProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n\n  const marks = {};\n  forecastOfDay.forEach((item, index) => {\n    marks[index] = item.moment.locale(locale).format('a h:mm');\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LocationText, {\n      onClick: onLocationClick,\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      selectedIndex: tabIndex,\n      onSelect: false,\n      children: [forecastOfDay.map(item => renderTabPanel(item, unit)), /*#__PURE__*/_jsxDEV(TabList, {\n        style: {\n          display: 'none'\n        },\n        children: forecastOfDay.map(item => renderTab(item))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        min: 0,\n        max: forecastOfDay.length - 1,\n        value: tabIndex,\n        handle: handle,\n        onChange: e => setTabIndex(e),\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherBannerTab, \"7U1n23VNKszU1OlII0iXqCfwam0=\");\n\n_c = WeatherBannerTab;\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  locale: 'zh-tw',\n  forecastOfDay: []\n};\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(PropTypes.shape({\n    dt: PropTypes.number.isRequired,\n    temp: PropTypes.number.isRequired,\n    temp_min: PropTypes.number.isRequired,\n    temp_max: PropTypes.number.isRequired,\n    humidity: PropTypes.number.isRequired,\n    icon: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    clouds: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired\n  })),\n  unit: PropTypes.string,\n  locale: PropTypes.string\n};\nexport default WeatherBannerTab;\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n_c2 = LocationText;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n_c3 = Container;\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n_c4 = TabContainer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"WeatherBannerTab\");\n$RefreshReg$(_c2, \"LocationText\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"TabContainer\");","map":{"version":3,"sources":["/Users/yujiaguo/Documents/github/weather-widget/src/components/WeatherBannerTab/WeatherBannerTab.jsx"],"names":["React","useState","PropTypes","moment","styled","WeatherBanner","Handle","Slider","WeatherBannerTab","location","forecastOfDay","locale","unit","onLocationClick","tabIndex","setTabIndex","renderTabPanel","item","displayUnit","dt","renderTab","displayLocale","localeRegion","unix","format","handle","params","value","dragging","index","restProps","marks","forEach","map","display","length","e","defaultProps","propTypes","string","isRequired","arrayOf","shape","number","temp","temp_min","temp_max","humidity","icon","desc","clouds","wind","LocationText","div","Container","TabContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport styled from '@emotion/styled';\nimport WeatherBanner from '../WeatherBanner/WeatherBanner';\n\nconst { Handle } = Slider;\n\nconst WeatherBannerTab = ({\n  location,\n  forecastOfDay,\n  locale,\n  unit,\n  onLocationClick,\n}) => {\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const renderTabPanel = (item, displayUnit) => {\n    return (\n      <TabPanel key={`tp${item.dt}`}>\n        <WeatherBanner forecastNow={item} unit={displayUnit} />\n      </TabPanel>\n    );\n  };\n\n  const renderTab = (item, displayLocale) => {\n    const localeRegion = displayLocale || 'zh-tw';\n    if (item) {\n      return (\n        <Tab key={`t${item.dt}`}>\n          {moment.unix(item.dt).locale(localeRegion).format('a h:mm')}\n        </Tab>\n      );\n    }\n    return <div />;\n  };\n\n  const handle = (params) => {\n    const { value, dragging, index, ...restProps } = params;\n    return (\n      <Tooltip\n        prefixCls=\"rc-slider-tooltip\"\n        overlay={value}\n        visible={dragging}\n        placement=\"top\"\n        key={index}\n      >\n        <Handle value={value} {...restProps} />\n      </Tooltip>\n    );\n  };\n\n  const marks = {};\n  forecastOfDay.forEach((item, index) => {\n    marks[index] = item.moment.locale(locale).format('a h:mm');\n  });\n\n  return (\n    <Container>\n      <LocationText onClick={onLocationClick}>{location}</LocationText>\n      <Tabs selectedIndex={tabIndex} onSelect={false}>\n        {forecastOfDay.map((item) => renderTabPanel(item, unit))}\n        <TabList style={{ display: 'none' }}>\n          {forecastOfDay.map((item) => renderTab(item))}\n        </TabList>\n      </Tabs>\n      <TabContainer>\n        <Slider\n          min={0}\n          max={forecastOfDay.length - 1}\n          value={tabIndex}\n          handle={handle}\n          onChange={(e) => setTabIndex(e)}\n          marks={marks}\n        />\n      </TabContainer>\n    </Container>\n  );\n};\n\nWeatherBannerTab.defaultProps = {\n  unit: 'metric',\n  locale: 'zh-tw',\n  forecastOfDay: [],\n};\n\nWeatherBannerTab.propTypes = {\n  location: PropTypes.string.isRequired,\n  forecastOfDay: PropTypes.arrayOf(\n    PropTypes.shape({\n      dt: PropTypes.number.isRequired,\n      temp: PropTypes.number.isRequired,\n      temp_min: PropTypes.number.isRequired,\n      temp_max: PropTypes.number.isRequired,\n      humidity: PropTypes.number.isRequired,\n      icon: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      clouds: PropTypes.number.isRequired,\n      wind: PropTypes.number.isRequired,\n    }),\n  ),\n  unit: PropTypes.string,\n  locale: PropTypes.string,\n};\n\nexport default WeatherBannerTab;\n\nconst LocationText = styled.div`\n  font-size: 2rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst TabContainer = styled.div`\n  margin: 0.8rem 0.8rem;\n  padding-bottom: 1.5rem;\n`;\n"]},"metadata":{},"sourceType":"module"}